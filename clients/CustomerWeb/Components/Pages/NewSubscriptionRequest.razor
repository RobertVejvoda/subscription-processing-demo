@page "/new"
@using CustomerWeb.RESTClients
@using CustomerWeb.Models
@rendermode InteractiveServer
@inject ISubscriptionApi SubscriptionApi;

<PageTitle>Register Subscription</PageTitle>

<h1>Register Subscription</h1>

@if (!IsNew())
{
    <p role="status">ProcessInstanceKey: @ProcessInstanceKey.</p>
}

<EditForm Model="@subscriptionRequest" OnValidSubmit="@Register" class="row g-3">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="col-md-6">
        <label for="firstName" class="form-label">First name</label>
        <InputText id="firstName" class="form-control" @bind-Value="@subscriptionRequest.FirstName"/>
        <ValidationMessage For="@(() => subscriptionRequest.FirstName)"/>
    </div>

    <div class="col-md-6">
        <label for="lastName" class="form-label">Last name</label>
        <InputText id="lastName" class="form-control" @bind-Value="@subscriptionRequest.LastName"/>
        <ValidationMessage For="@(() => subscriptionRequest.LastName)"/>
    </div>

    <div class="col-md-6">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" class="form-control" @bind-Value="@subscriptionRequest.Email"/>
        <ValidationMessage For="@(() => subscriptionRequest.Email)"/>
    </div>

    <div class="col-md-6">
        <label for="birthDate">Birth Date</label>
        <InputDate id="birthDate" class="form-control" @bind-Value="@subscriptionRequest.BirthDate" />
        <ValidationMessage For="@(() => subscriptionRequest.BirthDate)"/>
    </div>

    <div class="col-md-6">
        <label for="loanAmount">Loan amount</label>
        <InputNumber id="loanAmount" class="form-control"  @bind-Value="@subscriptionRequest.LoanAmount" />
        <ValidationMessage For="@(() => subscriptionRequest.LoanAmount)"/>
    </div>
    
    <div class="col-md-6">
        <label for="insuredAmount">Insured amount</label>
        <InputNumber id="insuredAmount" class="form-control" @bind-Value="@subscriptionRequest.InsuredAmount"/>
        <ValidationMessage For="@(() => subscriptionRequest.InsuredAmount)"/>
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary" disabled="@(!IsNew())">Register</button>
    </div>
</EditForm>


@code {

    private readonly RegisterSubscriptionRequest subscriptionRequest = new()
    {
        ProductId = "1"
    };

    private string? ProcessInstanceKey { get; set; }

    private bool IsNew() => string.IsNullOrWhiteSpace(ProcessInstanceKey);

    private async Task Register()
    {
        ProcessInstanceKey = await SubscriptionApi.Register(subscriptionRequest);
    }
}