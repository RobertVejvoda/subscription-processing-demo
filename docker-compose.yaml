version: "3.7"

services:

  subscription-service:
    container_name: subscription-service
    image: subscription-service:${TAG:-latest}
    build:
      context: .
      dockerfile: ./services/SubscriptionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5001:8080"       # app
      - "3601:3500"
      - "60001:50001"
      - "9091:9090"

  subscription-service-dapr:
    container_name: subscription-service-dapr
    image: daprio/daprd:1.12.0
    network_mode: "service:subscription-service"
    command: [ "./daprd",
               "-app-id", "subscription-service",
               "-dapr-http-port", "3500",
               "-dapr-grpc-port", "50001",
               "-metrics-port", "9090",
               "-app-port", "8080",   # app
               "-components-path", "/components",
               "-config", "/configuration/dapr-config.yaml"
    ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
    depends_on:
      - subscription-service
      
  customer-service:
    container_name: customer-service
    image: customer-service:${TAG:-latest}
    build:
      context: .
      dockerfile: ./services/CustomerService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5002:8080"       # app
      - "3602:3500"
      - "60002:50001"
      - "9092:9090"

  customer-service-dapr:
    container_name: customer-service-dapr
    image: daprio/daprd:1.12.0
    network_mode: "service:customer-service"
    command: [ "./daprd",
               "-app-id", "customer-service",
               "-dapr-http-port", "3500",
               "-dapr-grpc-port", "50001",
               "-metrics-port", "9090",
               "-app-port", "8080",   # app
               "-components-path", "/components",
               "-config", "/configuration/dapr-config.yaml"
    ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
    depends_on:
      - customer-service

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    restart: unless-stopped
    ports:
      - "9412:9411"
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq"

  ods-service:
    container_name: ods-service
    image: ods-service:${TAG:-latest}
    build:
      context: .
      dockerfile: ./services/ODSService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5010:8080"       # app
      - "3610:3500"
      - "60010:50001"
      - "9100:9090"

  ods-service-dapr:
    container_name: ods-service-dapr
    image: daprio/daprd:1.12.0
    network_mode: "service:ods-service"
    command: [ "./daprd",
               "-app-id", "ods-service",
               "-dapr-http-port", "3500",
               "-dapr-grpc-port", "50001",
               "-metrics-port", "9090",
               "-app-port", "8080",   # app
               "-components-path", "/components",
               "-config", "/configuration/dapr-config.yaml"
    ]
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"
    depends_on:
      - ods-service

  mongo:
    container_name: mongo
    image: mongo:5.0.15
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/var/lib/mongo"

  mssql:
    container_name: mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=b75d6st2e83qtjx9Sa98
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    

volumes:
  mongo-data:
  rabbitmq-data:
  mssql-data:

     
    
    